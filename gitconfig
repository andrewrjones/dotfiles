# some from https://github.com/paulirish/dotfiles/blob/master/.gitconfig
# and https://gist.github.com/robmiller/6018582
[include]
  # For username / creds / etc
  path = ~/.gitconfig_local

[core]
	pager = less -+F
[alias]
  # Get the current branch name (not so useful in itself, but used in
  # other aliases)
  branch-name = "!git rev-parse --abbrev-ref HEAD"
  ci = commit
  st = status -s
  s = status -s
  co = checkout
  cob = checkout -b
  c = commit -am
  up = pull --rebase --prune
	p = push
  pd = push origin HEAD:refs/drafts/master
  pr = push origin HEAD:refs/for/master
  di = diff
  df = diff --color --color-words --abbrev
  lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --
  l  = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --
  b  = branch
  amend = commit -a --amend
  # remove all merged branches. should be ran from master
  bclean = "!f() { git branch --merged ${1-master} | grep -v " ${1-master}$" | xargs git branch -d; }; f"
  # runs bclean from master, after pulling
  bdone = "!f() { git checkout ${1-master} && git up && git bclean ${1-master}; }; f"
  ec = config --global -e
	unadd = reset HEAD
	tree = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset%n' --abbrev-commit --date=relative --branches
  oneline = log --pretty=tformat:"%Cred%h%Creset%x09%Cgreen%an%Creset%x09%ad%x09%s"  --date=short --graph --decorate
  # https://csswizardry.com/2017/05/little-things-i-like-to-do-with-git/
  recent = for-each-ref --count=10 --sort=-committerdate refs/heads/ --format="%(refname:short)"
  graph = log --graph --all --decorate --stat --date=iso
  # Push the current branch to the remote "origin", and set it to track
  # the upstream branch
  pu = "!git push -u origin $(git branch-name)"
  # Delete the remote version of the current branch
  unpu = "!git push origin :$(git branch-name)"
[push]
#	default = simple

[color]
#	ui = always
[core]
	excludesfile = ~/.gitignore
	attributesfile = ~/.gitattributes
[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green
[color "diff"]
	meta = yellow bold
	frag = magenta bold
	old = red bold
	new = green bold
[color "status"]
	added = yellow
	changed = green
	untracked = cyan
[merge]
	log = true
[url "git@github.com:"]
	insteadOf = "gh:"
	pushInsteadOf = "github:"
	pushInsteadOf = "git://github.com/"
[url "git://github.com/"]
	insteadOf = "github:"
[url "git@gist.github.com:"]
	insteadOf = "gst:"
	pushInsteadOf = "gist:"
	pushInsteadOf = "git://gist.github.com/"
[url "git://gist.github.com/"]
	insteadOf = "gist:"

# Any GitHub repo with my username should be checked out r/w by default
# http://rentzsch.tumblr.com/post/564806957/public-but-hackable-git-submodules
[url "git@github.com:andrewrjones/"]
  insteadOf = "git://github.com/andrewrjones/"
[help]
	autocorrect = 15

[user]
	email = andrew@andrew-jones.com
	name = Andrew Jones
